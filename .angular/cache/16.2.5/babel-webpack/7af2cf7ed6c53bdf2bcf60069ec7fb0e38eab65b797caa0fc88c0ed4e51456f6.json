{"ast":null,"code":"import { inject } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport * as i0 from \"@angular/core\";\nexport class TeamService {\n  constructor() {\n    this.http = inject(HttpClient);\n  }\n  getAllTeams() {\n    return this.http.get(`/api/teams`);\n  }\n  getTeamById(teamId) {\n    return this.http.get(`/api/teams/${teamId}`);\n  }\n  static #_ = this.ɵfac = function TeamService_Factory(t) {\n    return new (t || TeamService)();\n  };\n  static #_2 = this.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: TeamService,\n    factory: TeamService.ɵfac,\n    providedIn: 'root'\n  });\n}","map":{"version":3,"names":["inject","HttpClient","TeamService","constructor","http","getAllTeams","get","getTeamById","teamId","_","_2","factory","ɵfac","providedIn"],"sources":["/Users/omidkhataee/LHL/monorepo/lhl/libs/client/data-access/src/lib/team.service.ts"],"sourcesContent":["import {inject, Injectable} from '@angular/core';\nimport {HttpClient} from '@angular/common/http';\nimport {Observable} from 'rxjs';\nimport {ITeam} from '@lhl/shared/domain';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class TeamService {\n  private readonly http = inject(HttpClient);\n\n  getAllTeams(): Observable<ITeam[]> {\n    return this.http.get<ITeam[]>(`/api/teams`);\n  }\n\n  getTeamById(teamId: string): Observable<ITeam> {\n    return this.http.get<ITeam>(`/api/teams/${teamId}`);\n  }\n}\n"],"mappings":"AAAA,SAAQA,MAAM,QAAmB,eAAe;AAChD,SAAQC,UAAU,QAAO,sBAAsB;;AAO/C,OAAM,MAAOC,WAAW;EAHxBC,YAAA;IAImB,KAAAC,IAAI,GAAGJ,MAAM,CAACC,UAAU,CAAC;;EAE1CI,WAAWA,CAAA;IACT,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAU,YAAY,CAAC;EAC7C;EAEAC,WAAWA,CAACC,MAAc;IACxB,OAAO,IAAI,CAACJ,IAAI,CAACE,GAAG,CAAQ,cAAcE,MAAM,EAAE,CAAC;EACrD;EAAC,QAAAC,CAAA,G;qBATUP,WAAW;EAAA;EAAA,QAAAQ,EAAA,G;WAAXR,WAAW;IAAAS,OAAA,EAAXT,WAAW,CAAAU,IAAA;IAAAC,UAAA,EAFV;EAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}