import { ChangeDetectionStrategy, Component, Input } from '@angular/core';
import { CommonModule } from '@angular/common';
import { ClarityModule } from '@clr/angular';
import { ManagerTableHeaders } from './model/manager-table-headers';
import { TeamNamePipe } from '@lhl/shared/utils/pipe';
import * as i0 from "@angular/core";
import * as i1 from "@angular/common";
export class ManagerListComponent {
    constructor() {
        this._managers = [];
    }
    set managers(managers) {
        if (managers) {
            this._managers = managers;
        }
    }
    get managers() {
        return this._managers;
    }
    get headers() {
        return Object.values(ManagerTableHeaders);
    }
    static { this.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: "12.0.0", version: "16.2.8", ngImport: i0, type: ManagerListComponent, deps: [], target: i0.ɵɵFactoryTarget.Component }); }
    static { this.ɵcmp = i0.ɵɵngDeclareComponent({ minVersion: "14.0.0", version: "16.2.8", type: ManagerListComponent, isStandalone: true, selector: "lhl-manager-list", inputs: { managers: "managers" }, ngImport: i0, template: "<table class=\"table\">\n    <thead>\n        <tr>\n            <th *ngFor=\"let header of headers\">{{header}}</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let manager of managers\">\n            <td>\n                <span>{{manager.name}}</span>\n            </td>\n            <td *ngIf=\"manager.teamId\">\n                <span>{{manager.teamId | teamName | async}}</span>\n            </td>\n            <td *ngIf=\"!manager.teamId\">\n                <span>N/A</span>\n            </td>\n            <td>\n                <span>{{manager.email}}</span>\n            </td>\n            <td>\n                <span>{{manager.admin}}</span>\n            </td>\n        </tr>\n    </tbody>\n</table>", styles: [""], dependencies: [{ kind: "ngmodule", type: CommonModule }, { kind: "directive", type: i1.NgForOf, selector: "[ngFor][ngForOf]", inputs: ["ngForOf", "ngForTrackBy", "ngForTemplate"] }, { kind: "directive", type: i1.NgIf, selector: "[ngIf]", inputs: ["ngIf", "ngIfThen", "ngIfElse"] }, { kind: "pipe", type: i1.AsyncPipe, name: "async" }, { kind: "ngmodule", type: ClarityModule }, { kind: "pipe", type: TeamNamePipe, name: "teamName" }], changeDetection: i0.ChangeDetectionStrategy.OnPush }); }
}
i0.ɵɵngDeclareClassMetadata({ minVersion: "12.0.0", version: "16.2.8", ngImport: i0, type: ManagerListComponent, decorators: [{
            type: Component,
            args: [{ selector: 'lhl-manager-list', standalone: true, imports: [CommonModule, ClarityModule, TeamNamePipe], changeDetection: ChangeDetectionStrategy.OnPush, template: "<table class=\"table\">\n    <thead>\n        <tr>\n            <th *ngFor=\"let header of headers\">{{header}}</th>\n        </tr>\n    </thead>\n    <tbody>\n        <tr *ngFor=\"let manager of managers\">\n            <td>\n                <span>{{manager.name}}</span>\n            </td>\n            <td *ngIf=\"manager.teamId\">\n                <span>{{manager.teamId | teamName | async}}</span>\n            </td>\n            <td *ngIf=\"!manager.teamId\">\n                <span>N/A</span>\n            </td>\n            <td>\n                <span>{{manager.email}}</span>\n            </td>\n            <td>\n                <span>{{manager.admin}}</span>\n            </td>\n        </tr>\n    </tbody>\n</table>" }]
        }], propDecorators: { managers: [{
                type: Input
            }] } });
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWFuYWdlci1saXN0LmNvbXBvbmVudC5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvbGhsL21hbmFnZXIvdWkvc3JjL2xpYi9tYW5hZ2VyLWxpc3QvbWFuYWdlci1saXN0LmNvbXBvbmVudC50cyIsIi4uLy4uLy4uLy4uLy4uLy4uLy4uLy4uL2xpYnMvbGhsL21hbmFnZXIvdWkvc3JjL2xpYi9tYW5hZ2VyLWxpc3QvbWFuYWdlci1saXN0LmNvbXBvbmVudC5odG1sIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBLE9BQU8sRUFBRSx1QkFBdUIsRUFBRSxTQUFTLEVBQUUsS0FBSyxFQUFFLE1BQU0sZUFBZSxDQUFDO0FBQzFFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSxpQkFBaUIsQ0FBQztBQUMvQyxPQUFPLEVBQUUsYUFBYSxFQUFFLE1BQU0sY0FBYyxDQUFDO0FBRTdDLE9BQU8sRUFBRSxtQkFBbUIsRUFBRSxNQUFNLCtCQUErQixDQUFDO0FBQ3BFLE9BQU8sRUFBRSxZQUFZLEVBQUUsTUFBTSx3QkFBd0IsQ0FBQzs7O0FBVXRELE1BQU0sT0FBTyxvQkFBb0I7SUFSakM7UUFTVSxjQUFTLEdBQW1CLEVBQUUsQ0FBQztLQWV4QztJQWJDLElBQWEsUUFBUSxDQUFDLFFBQTJDO1FBQy9ELElBQUcsUUFBUSxFQUFFO1lBQ1gsSUFBSSxDQUFDLFNBQVMsR0FBRyxRQUFRLENBQUM7U0FDM0I7SUFDSCxDQUFDO0lBRUQsSUFBSSxRQUFRO1FBQ1YsT0FBTyxJQUFJLENBQUMsU0FBUyxDQUFDO0lBQ3hCLENBQUM7SUFFRCxJQUFJLE9BQU87UUFDVCxPQUFPLE1BQU0sQ0FBQyxNQUFNLENBQUMsbUJBQW1CLENBQUMsQ0FBQztJQUM1QyxDQUFDOzhHQWZVLG9CQUFvQjtrR0FBcEIsb0JBQW9CLDhHQ2ZqQyx5dEJBeUJRLHlERGZJLFlBQVksb1RBQUUsYUFBYSwwQkFBRSxZQUFZOzsyRkFLeEMsb0JBQW9CO2tCQVJoQyxTQUFTOytCQUNFLGtCQUFrQixjQUNoQixJQUFJLFdBQ1AsQ0FBQyxZQUFZLEVBQUUsYUFBYSxFQUFFLFlBQVksQ0FBQyxtQkFHbkMsdUJBQXVCLENBQUMsTUFBTTs4QkFLbEMsUUFBUTtzQkFBcEIsS0FBSyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IENoYW5nZURldGVjdGlvblN0cmF0ZWd5LCBDb21wb25lbnQsIElucHV0IH0gZnJvbSAnQGFuZ3VsYXIvY29yZSc7XG5pbXBvcnQgeyBDb21tb25Nb2R1bGUgfSBmcm9tICdAYW5ndWxhci9jb21tb24nO1xuaW1wb3J0IHsgQ2xhcml0eU1vZHVsZSB9IGZyb20gJ0BjbHIvYW5ndWxhcic7XG5pbXBvcnQgeyBNYW5hZ2VyIH0gZnJvbSAnQGxobC9tYW5hZ2VyL2RhdGEtYWNjZXNzJztcbmltcG9ydCB7IE1hbmFnZXJUYWJsZUhlYWRlcnMgfSBmcm9tICcuL21vZGVsL21hbmFnZXItdGFibGUtaGVhZGVycyc7XG5pbXBvcnQgeyBUZWFtTmFtZVBpcGUgfSBmcm9tICdAbGhsL3NoYXJlZC91dGlscy9waXBlJztcblxuQENvbXBvbmVudCh7XG4gIHNlbGVjdG9yOiAnbGhsLW1hbmFnZXItbGlzdCcsXG4gIHN0YW5kYWxvbmU6IHRydWUsXG4gIGltcG9ydHM6IFtDb21tb25Nb2R1bGUsIENsYXJpdHlNb2R1bGUsIFRlYW1OYW1lUGlwZV0sXG4gIHRlbXBsYXRlVXJsOiAnLi9tYW5hZ2VyLWxpc3QuY29tcG9uZW50Lmh0bWwnLFxuICBzdHlsZVVybHM6IFsnLi9tYW5hZ2VyLWxpc3QuY29tcG9uZW50LnNjc3MnXSxcbiAgY2hhbmdlRGV0ZWN0aW9uOiBDaGFuZ2VEZXRlY3Rpb25TdHJhdGVneS5PblB1c2gsXG59KVxuZXhwb3J0IGNsYXNzIE1hbmFnZXJMaXN0Q29tcG9uZW50IHtcbiAgcHJpdmF0ZSBfbWFuYWdlcnM6IEFycmF5PE1hbmFnZXI+ID0gW107XG4gIFxuICBASW5wdXQoKSBzZXQgbWFuYWdlcnMobWFuYWdlcnM6IEFycmF5PE1hbmFnZXI+IHwgdW5kZWZpbmVkIHwgbnVsbCkge1xuICAgIGlmKG1hbmFnZXJzKSB7XG4gICAgICB0aGlzLl9tYW5hZ2VycyA9IG1hbmFnZXJzO1xuICAgIH1cbiAgfVxuXG4gIGdldCBtYW5hZ2VycygpOiBBcnJheTxNYW5hZ2VyPiB7XG4gICAgcmV0dXJuIHRoaXMuX21hbmFnZXJzO1xuICB9XG5cbiAgZ2V0IGhlYWRlcnMoKTogQXJyYXk8c3RyaW5nPiB7XG4gICAgcmV0dXJuIE9iamVjdC52YWx1ZXMoTWFuYWdlclRhYmxlSGVhZGVycyk7XG4gIH1cbn1cbiIsIjx0YWJsZSBjbGFzcz1cInRhYmxlXCI+XG4gICAgPHRoZWFkPlxuICAgICAgICA8dHI+XG4gICAgICAgICAgICA8dGggKm5nRm9yPVwibGV0IGhlYWRlciBvZiBoZWFkZXJzXCI+e3toZWFkZXJ9fTwvdGg+XG4gICAgICAgIDwvdHI+XG4gICAgPC90aGVhZD5cbiAgICA8dGJvZHk+XG4gICAgICAgIDx0ciAqbmdGb3I9XCJsZXQgbWFuYWdlciBvZiBtYW5hZ2Vyc1wiPlxuICAgICAgICAgICAgPHRkPlxuICAgICAgICAgICAgICAgIDxzcGFuPnt7bWFuYWdlci5uYW1lfX08L3NwYW4+XG4gICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgPHRkICpuZ0lmPVwibWFuYWdlci50ZWFtSWRcIj5cbiAgICAgICAgICAgICAgICA8c3Bhbj57e21hbmFnZXIudGVhbUlkIHwgdGVhbU5hbWUgfCBhc3luY319PC9zcGFuPlxuICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgICAgIDx0ZCAqbmdJZj1cIiFtYW5hZ2VyLnRlYW1JZFwiPlxuICAgICAgICAgICAgICAgIDxzcGFuPk4vQTwvc3Bhbj5cbiAgICAgICAgICAgIDwvdGQ+XG4gICAgICAgICAgICA8dGQ+XG4gICAgICAgICAgICAgICAgPHNwYW4+e3ttYW5hZ2VyLmVtYWlsfX08L3NwYW4+XG4gICAgICAgICAgICA8L3RkPlxuICAgICAgICAgICAgPHRkPlxuICAgICAgICAgICAgICAgIDxzcGFuPnt7bWFuYWdlci5hZG1pbn19PC9zcGFuPlxuICAgICAgICAgICAgPC90ZD5cbiAgICAgICAgPC90cj5cbiAgICA8L3Rib2R5PlxuPC90YWJsZT4iXX0=